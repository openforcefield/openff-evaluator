from _typeshed import Incomplete

class ToolkitRegistry:
    def __init__(
        self,
        toolkit_precedence: Incomplete | None = ...,
        exception_if_unavailable: bool = ...,
        _register_imported_toolkit_wrappers: bool = ...,
    ) -> None: ...
    @property
    def registered_toolkits(self): ...
    @property
    def registered_toolkit_versions(self): ...
    def register_toolkit(
        self, toolkit_wrapper, exception_if_unavailable: bool = ...
    ) -> None: ...
    def deregister_toolkit(self, toolkit_wrapper) -> None: ...
    def add_toolkit(self, toolkit_wrapper) -> None: ...
    def resolve(self, method_name): ...
    def call(
        self,
        method_name,
        *args,
        raise_exception_types: Incomplete | None = ...,
        **kwargs
    ): ...
