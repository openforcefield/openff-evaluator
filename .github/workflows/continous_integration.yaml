name: tests

on:
  push:
    paths:
      - 'evaluator/**'
      - '.github/**'
      - 'devtools/**'
      - 'oe_license.txt.gpg'
      - 'setup.py'
  schedule:
    - cron: '0 0 * * *'

jobs:

  test:

    runs-on: ${{ matrix.os }}

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    strategy:

      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.6, 3.7]
        openeye: [true, false]

    steps:
      - uses: actions/checkout@v2
      - name: Additional info about the build
        run: |

          uname -a
          df -h
          ulimit -a

      - name: Set MacOS permissions
        if: startsWith(matrix.os, 'macOS')
        run: |

          sudo chown -R $USER:staff $HOME/.conda
          sudo chown -R $USER:staff $CONDA

      - name: Configure conda
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate

          conda config --add channels conda-forge

          conda config --set always_yes True

          conda install conda conda-build jinja2 anaconda-client
          conda update --quiet --all

        env:
          OPERATING_SYSTEM: ${{ matrix.os }}

      - name: Create test environment
        shell: bash
        run: |

          . devtools/scripts/initialize_conda.sh
          conda activate

          python devtools/scripts/create_conda_env.py -n=test -p=${{ matrix.python-version }} devtools/conda-envs/test_env.yaml

      - name: Install OpenEye toolkit.
        if: matrix.openeye
        run: |

          . devtools/scripts/initialize_conda.sh
          conda activate test

          ./devtools/scripts/decrypt_oe_license.sh
          conda install -c openeye openeye-toolkits
          
          python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"

        env:
          OE_LICENSE_PASSPHRASE: ${{ secrets.OE_LICENSE_PASSPHRASE }}

      - name: Install package
        run: |

          . devtools/scripts/initialize_conda.sh
          conda activate test

          python setup.py develop --no-deps

      - name: Run tests
        run: |

          . devtools/scripts/initialize_conda.sh
          conda activate test

          pytest -v --cov=evaluator evaluator/tests/

      - name: Code coverage
        run: |

          . devtools/scripts/initialize_conda.sh
          conda activate test

          codecov --token=${{ secrets.CODECOV_TOKEN }}
